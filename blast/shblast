#!/bin/bash

# デフォルト値
THREADS=16  # デフォルトのスレッド数
BLAST2RMA_OPTS=""  # blast2rma のオプション
RMA2INFO_OPTS=""   # rma2info のオプション

# ヘルプメッセージ
show_help() {
    echo "Usage: $0 [OPTIONS] <FASTQ1> [FASTQ2] [FASTQ3]..."
    echo ""
    echo "Options:"
    echo "  -h           Show this help message"
    echo "  -t <number>  Set the number of threads (default: 1)"
    echo "  -b <opts>    Options for blast2rma"
    echo "  -r <opts>    Options for rma2info"
}

# オプションの処理
while getopts ":ht:b:r:" opt; do
    case "$opt" in
        h)
            show_help
            exit 0
            ;;
        t)
            THREADS=$OPTARG
            ;;
        b)
            BLAST2RMA_OPTS=$OPTARG
            ;;
        r)
            RMA2INFO_OPTS=$OPTARG
            ;;
        \?)
            echo "Invalid option: -$OPTARG" >&2
            exit 1
            ;;
        :)
            echo "Option -$OPTARG requires an argument." >&2
            exit 1
            ;;
    esac
done

# 残りの引数（オプション以外の引数）
shift $((OPTIND -1))

# ここからメインの処理

echo "Number of threads: $THREADS"
echo "blast2rma options: $BLAST2RMA_OPTS"
echo "rma2info options: $RMA2INFO_OPTS"
echo "FASTQ files: $@"


# 各種パスの設定
# 注：seqkit, blastn, blast2rma, rma2infoにはPATHを通しておくこと

DB=merged_12.2_1.15.fa

TEMP_DIR=$(mktemp -d)
RESULT_FILE="${TEMP_DIR}/reslt.txt"

for FASTQ_FILE in "$@"; do
 BASE_NAME=$(basename "$FASTQ_FILE" .fq)
 FASTA_FILE="${TEMP_DIR}/${BASE_NAME}.fasta"
 BLAST_OUTPUT="${TEMP_DIR}/${BASE_NAME}.blastn"
 RMA_FILE="${TEMP_DIR}/${BASE_NAME}.rma"
 INFO_FILE="${TEMP_DIR}/${BASE_NAME}.info"

 seqkit fq2fa $FASTQ_FILE -o $FASTA_FILE
 if [ $? -ne 0 ]; then
  echo "Error converting FASTQ to FASTA"
  exit 1
 fi

 blastn -num_threads $THREADS -db "$DB" -query $FASTA_FILE -out $BLAST_OUTPUT
 if [ $? -ne 0 ]; then
  echo "Error running BLAST"
  exit 1
 fi

 blast2rma -i $BLAST_OUTPUT -o $RMA_FILE --format BlastText $BLAST2RMA_OPTS
 if [ $? -ne 0 ]; then
  echo "Error converting BLAST output to RMA"
  exit 1
 fi

 rma2info -i $RMA_FILE -o $INFO_FILE -c2c Taxonomy -p -r $RMA2INFO_OPTS
 if [ $? -ne 0 ]; then
  echo "Error extracting information from RMA file"
  exit 1
 fi

 COUNT=$(grep '^S' $INFO_FILE | grep 'NCBI; cellular organisms; Eukaryota' | wc -l)
 if [ $? -ne 0 ]; then
  echo "Error extracting information from INFO file"
  exit 1
 fi
 echo "$COUNT $FASTQ_FILE" >> $RESULT_FILE
done

MAX_RESULT=$(sort -nr $RESULT_FILE | head -n 1)
MAX_COUNT=$(echo $MAX_RESULT | awk '{print $1}')
MAX_FILE=$(echo $MAX_RESLUT | awk '{print $2}')
echo "File with the highest count: $MAX_FILE ($MAX_COUNT)"

mv $TEMP_DIR .
echo "Pipeline complete successfully"




